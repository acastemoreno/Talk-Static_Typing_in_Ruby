* Slide Options                           :noexport:
# ======= Appear in cover-slide ====================
#+TITLE: Tipado estático en Ruby
#+SUBTITLE:  Definiciónes, Proposito, Uso
#+COMPANY: Codeable
#+AUTHOR: Albert Castellano Moreno

# ======= Appear in thank-you-slide ================
#+GITHUB: http://github.com/acastemoreno

# ======= Appear under each slide ==================
#+FAVICON: images/ruby.png
#+ICON: images/ruby.png
#+HASHTAG: #Ruby

# ======= Google Analytics =========================
#+ANALYTICS: UA-43692346-5

# ======= Org settings =========================
#+EXCLUDE_TAGS: noexport
#+OPTIONS: toc:nil num:nil ^:nil

* Definiciónes
  :PROPERTIES:
  :SLIDE:    segue dark quote
  :ASIDE:    right bottom
  :ARTICLE:  flexbox vleft auto-fadein
  :END:

** Definiciónes
- Tipado
- Tipado estatico
- Tipado dinamico

** Tipado
Es la definicion del =type= que tendra una variable.

El tipado de un lenguaje define la forma como se crean y modifican las variables.

** Tipado estatico
- Las variables llevan asociado el =type= 
- El =type= de una variable no se puede modificar.
#+BEGIN_CENTER
#+ATTR_HTML: :height 300px
[[file:images/ejemplo-estatico.png]]
#+END_CENTER

** Tipado dinamico
- El =type= esta asociado al valor de una variable y no a la variable en si.
- Una variable puede contener a lo largo de su ejecucion distintos =types=
#+BEGIN_CENTER
#+ATTR_HTML: :height 300px
[[file:images/ejemplo-dinamico.png]]
#+END_CENTER

** Tipado estatico vs Tipado dinamico
- Tipado estático: *compilador comprueba* que se asignan valores correctos a las variables.
  
  *Se detectan errores en tiempo compilación* 
- Tipado dinámico: el *compilador o interprete no* se sabe qué tipo de valor tiene una variable *hasta la ejecucion*. 
  
  *Permite flexibilidad*

* Proposito
  :PROPERTIES:
  :SLIDE:    segue dark quote
  :ASIDE:    right bottom
  :ARTICLE:  flexbox vleft auto-fadein
  :END:

** Problema
Tengo que esperar a que el codigo se ejecute para darme cuenta de un error.

*El problema no puede ser tan obvio*
#+BEGIN_CENTER
#+ATTR_HTML: :height 300px
[[file:images/levitate.png]]
#+END_CENTER

** Solución
Type Checker
*Declarar los =types= de los argumentos y de la salida para metodos*

#+BEGIN_CENTER
#+ATTR_HTML: :height 300px
[[file:images/sorbet.png]]
#+END_CENTER

* Como usarlo
  :PROPERTIES:
  :SLIDE:    segue dark quote
  :ASIDE:    right bottom
  :ARTICLE:  flexbox vleft auto-fadein
  :END:

** Setup
- Agregar las siguientes lines de codigo a =.gemfile=
#+BEGIN_SRC ruby
...
gem 'sorbet', :group => :development
gem 'sorbet-runtime'
#+END_SRC
- *Guarda todos los archivos que tengas abierto. El siguiente comando añade una linea en todos los archivos .rb que encuentre*
- Iniciar Sorbet en el proyecto =bundle exec srb init=
- Ejecuta =bundle exec srb tc= para una comprobacion inicial.

#+ATTR_HTML: :class note
#+BEGIN_QUOTE
solo para nota[fn:1]
#+END_QUOTE

** Funcionamiento
Sorbet comprube un archivo en las siguientes condiciones:
- No tienes alguna linea de la siguiente manera 
#+BEGIN_SRC ruby
if __FILE__  == $PROGRAM_NAME
#+END_SRC
- Tienes la siguiente linea arriba de todo el archivo =typed: true=

** Demo Time 1 - sin spec
  :PROPERTIES:
  :ARTICLE:  smaller
  :END:
#+BEGIN_SRC ruby
<b># typed: true</b>
class Magic1
  def levitate(caster)
    caster.concat(": wingardium leviosa")
  end
end

p Magic1.new.levitate("Harry")	
p Magic1.new.levitate(666)		
p Magic1.new.levitate() 			
#+END_SRC
Corregir codigo y ejecutar =bundle exec srb tc= hasta que no salga error. (Probar si nos ayudo en algo)

#+ATTR_HTML: :class note
#+BEGIN_QUOTE
solo para nota[fn:2]
#+END_QUOTE

** Demo Time 1 - con spec
  :PROPERTIES:
  :ARTICLE:  smaller
  :END:
#+BEGIN_SRC ruby
# typed: true

# hace que class T sea accesible desde tiempo de ejecucion
require "sorbet-runtime"

class Magic2
  # hace al methodo sig accesible desde tiempo de ejecucion
  extend T::Sig

  # declara los types de parametros y return
  sig {params(caster: String).returns(String)}
  def levitate(caster)
    caster.concat(": wingardium leviosa")
  end
end

p Magic2.new.levitate("Harry")	# OK
p Magic2.new.levitate(666)
p Magic2.new.levitate()
#+END_SRC
Corregir codigo y ejecutar =bundle exec srb tc= hasta que no salga error. (Probar si nos ayudo en algo)



** Resultado Demo 1
#+BEGIN_CENTER
#+ATTR_HTML: :height 300px
[[file:images/demo1.png]]
#+END_CENTER



* Gracias ˊ・ω・ˋ
:PROPERTIES:
:SLIDE: thank-you-slide segue
:ASIDE: right
:ARTICLE: flexbox vleft auto-fadein
:END:

* Footnotes
[fn:1] [[https://sorbet.org/docs/adopting][Doc - Install]]
[fn:1] [[https://sorbet.org/docs/static][Doc - Static Check]]
